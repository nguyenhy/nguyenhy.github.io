---
import { randStr } from "../utils/id";

interface Props {
    html?: string;
    css?: string;
    js?: string;
}
const props = Astro.props;
const id = randStr();
const cid = `$$_${id}`;
---

<astro-playground class="o--playground" data-cid={id}>
    <div></div>
</astro-playground>

<script is:inline define:vars={{ cid }}>
    window.$astroProps = window.$astroProps || {};
    window.$astroProps[cid] = props;
</script>
<script>
    import { run } from "./web";

    class AstroPlayground extends HTMLElement {
        connectedCallback() {
            const cid = this.dataset.cid;
            const props = cid ? window.$astroProps[cid] : null;
            const html = props?.html || "";
            const css = props?.css || "";
            const js = props?.js || "";
            const iframe = run({
                container: this.querySelector("div")!,
                source: {
                    html,
                    css,
                    js,
                },
            });

            const $parent = iframe.parentNode;
            if ($parent && $parent instanceof Element) {
                iframe.height = $parent.scrollHeight.toString();
            }
        }
    }

    customElements.define("astro-playground", AstroPlayground);
</script>

<style scoped lang="scss">
    .o--playground {
        :global(iframe) {
            width: 100%;
            border: 0;
        }
    }
</style>
